@import url('https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@500;700;900&display=swap');

:root { /* :root - место, где мы объявляем глобальные css переменные (переменные, которые мы можем использовать во всем css-файле)*/
    --pale-blue: hsl(225, 100%, 94%); /*ситаксис css переменных: "--css-variable-name: value;"*/
    --bright-blue: hsl(245, 75%, 52%);
    --very-pale-blue: hsl(225, 100%, 98%);
    --desaturated-blue: hsl(224, 23%, 55%);
    --dark-blue: hsl(223, 47%, 23%);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /*при добавлении дополнительных полей и отступов общая ширина изменяться НЕ будет*/

}

body {
    background-image: url("./images/pattern-background-desktop.svg");
    background-repeat: no-repeat; /*чтобы картинка за заднем плане НЕ повторялась*/
    background-size: cover; /*устанавливаем размер картинки-задника (на весь экран)*/
    background-color: var(--pale-blue); /*используем глобальную переменную с цветом, объявленную выше*/
    font-family: "Red Hat Display", sans-serif;
    font-size: 16px;
}

.card {
    width: 450px;
    background-color: white;
    color: var(--desaturated-blue);
    border-radius: 20px; /*закругление рамки*/
    overflow: hidden; /*Когда содержимое div слишком большое для "card", то его нужно спрятать*/
    margin: 50px auto; /*50px - для верха и низа, auto - для лева и права (одинаковые значения будут присвоены дл отступов слева и справа, т.е. изображение отображается в центре экрана, без смещения*/
}

.title {
    color: var(--dark-blue);
    font-weight: 900;
    font-size: 32px;
}

.hero-image {
    width: 100%; /*Ширина 100% означает, что элемент будет ширину своего предка*/
}

.container {
    padding: 30px; /*внутренние отступы со всех сторон элемента (по часовой стрелке начиная с верха)*/
    display: flex;
    flex-direction: column;
    justify-content: center;
    text-align: center;
    font-size: 18px;
}

.container > * { /*все потомки внутри этого container, будут иметь margin с указанным размером. 1-е значение - для верха и низа, 2-е - для лева и права*/
    margin: 13px 0;
}

.order-description {
    line-height: 25px;
}

.plan-container {
    font-size: 16px;
    background-color: var(--very-pale-blue);
    padding: 25px;
    border-radius: 12px;
    display: flex; /*элементы располагаются в одну строку , не столбик*/
    flex-direction: row;
    justify-content: space-between; /*распределение растояния между элементами равномерно*/
    align-items: center;/*выравнивание по центру*/
}

.plan-container a {
    color: var(--bright-blue);
    font-size: 13px;
    font-weight: 700;
}

.plan-container a:hover {
    opacity: 0.8;
    text-decoration: none; /*при наведении курсора будет исчезать подчеркивание*/
}

.plan-container strong {
    color: var(--dark-blue);
}

.plan-description {
    line-height: 20px;
    margin-right: 75px;
}

button {
    width: 100%; /*одна эта кнопка на всю ширину*/
    border: none;
    font-weight: 700;
    font-size: 0.9rem;
    border-radius: 12px;
    cursor: pointer; /*при наведении будет появляться "пальчик"*/
}

.proceed-button {
    background-color: var(--bright-blue);
    padding: 1rem 0;
    color: white;
    box-shadow: 0 20px 30px -8px rgb(197 189 245);
}

.proceed-button:hover {
    opacity: 0.8; /*прозрачность/непрозрачность: при наведении курсора кнопка изменяет цвет (оттенок)*/
}

.cancel-button {
    background-color: white;
    color: var(--desaturated-blue);
    margin-top: 22px;
}

.cancel-button:hover {
    color: black;
}